void __cdecl CIndicatorScreen::PaintIndicator(CIndicatorScreen *const this)
{
  int v1; // ecx
  unsigned int m_Index; // eax
  char *v3; // edx
  int v4; // edx
  vgui::ISurface *v5; // esi
  void (__cdecl *v6)(vgui::ISurface *, _DWORD, _DWORD, int, int); // edi
  int Wide; // eax
  int v8; // ecx
  char *v9; // esi
  int m_nXTextureID; // esi
  int Tall; // [esp+2Ch] [ebp-1Ch]

  v1 = 0;
  m_Index = this->m_hScreenEntity.m_Index;
  if ( m_Index != -1 )
  {
    v3 = (char *)g_pEntityList + 16 * (unsigned __int16)m_Index;
    if ( *((_DWORD *)v3 + 2) == HIWORD(m_Index) )
      v1 = *((_DWORD *)v3 + 1);
  }
  v4 = *(_DWORD *)(v1 + 2672);
  if ( v4 == 1 )
  {
    m_nXTextureID = this->m_nXTextureID;
    goto LABEL_15;
  }
  if ( v4 == 2 )
  {
    m_nXTextureID = this->m_nOTextureID;
LABEL_15:
    (*(void (__cdecl **)(vgui::ISurface *, int))(*(_DWORD *)g_pVGuiSurface + 56))(g_pVGuiSurface, -1);
    (*(void (__cdecl **)(vgui::ISurface *, int))(*(_DWORD *)g_pVGuiSurface + 148))(g_pVGuiSurface, m_nXTextureID);
    v5 = g_pVGuiSurface;
    v6 = *(void (__cdecl **)(vgui::ISurface *, _DWORD, _DWORD, int, int))(*(_DWORD *)g_pVGuiSurface + 156);
    goto LABEL_8;
  }
  if ( v4 )
  {
    v8 = 0;
    if ( m_Index != -1 )
    {
      v9 = (char *)g_pEntityList + 16 * (unsigned __int16)m_Index;
      if ( *((_DWORD *)v9 + 2) == HIWORD(m_Index) )
        v8 = *((_DWORD *)v9 + 1);
    }
    if ( *(_BYTE *)(v8 + 2669) )
      m_nXTextureID = this->m_nCheckTextureID;
    else
      m_nXTextureID = this->m_nUncheckedTextureID;
    goto LABEL_15;
  }
  (*(void (__cdecl **)(vgui::ISurface *, int))(*(_DWORD *)g_pVGuiSurface + 56))(g_pVGuiSurface, -14145496);
  v5 = g_pVGuiSurface;
  v6 = *(void (__cdecl **)(vgui::ISurface *, _DWORD, _DWORD, int, int))(*(_DWORD *)g_pVGuiSurface + 60);
LABEL_8:
  Tall = vgui::Panel::GetTall(this);
  Wide = vgui::Panel::GetWide(this);
  v6(v5, 0, 0, Wide, Tall);
}