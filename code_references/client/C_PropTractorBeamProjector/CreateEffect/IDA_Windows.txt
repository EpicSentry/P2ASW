void __thiscall C_PropTractorBeamProjector::CreateEffect(C_PropTractorBeamProjector *this)
{
  CNewParticleEffect **p_m_pObject; // esi
  CNewParticleEffect *v3; // eax
  CNewParticleEffect *v4; // ecx
  _DWORD *v5; // edx
  int v6; // ecx
  CUtlReference<CNewParticleEffect> *v7; // edx
  CUtlReference<CNewParticleEffect> *v8; // ecx
  CUtlReference<CNewParticleEffect> *m_pHead; // edx
  Vector *v10; // eax
  __int64 v11; // xmm0_8
  float z; // eax
  CNewParticleEffect *v13; // ecx
  float m_flLinearForce; // xmm3_4
  float v15; // xmm1_4
  float v16; // xmm2_4
  CNewParticleEffect *v17; // ecx
  Vector color; // [esp+Ch] [ebp-28h] BYREF
  Vector vVelocity; // [esp+18h] [ebp-1Ch] BYREF
  char *pAttachmentNames[3]; // [esp+24h] [ebp-10h]
  int i; // [esp+30h] [ebp-4h]

  C_PropTractorBeamProjector::StopEffect(this);
  if ( !this->m_bNoEmitterParticles )
  {
    pAttachmentNames[0] = "emitter1";
    pAttachmentNames[1] = "emitter2";
    pAttachmentNames[2] = "emitter3";
    i = 0;
    p_m_pObject = &this->m_hEmitterEffect[0].m_pObject;
    do
    {
      if ( *p_m_pObject )
      {
        CParticleProperty::StopEmission(&this->m_Particles, *p_m_pObject, 0, 0, 0, 1);
        if ( *p_m_pObject )
        {
          CUtlIntrusiveDList<CUtlReference<CNewParticleEffect>>::RemoveNode(
            (CUtlIntrusiveDList<CUtlReference<CSheet> > *)&(*p_m_pObject)->m_References,
            (CUtlReference<CSheet> *)(p_m_pObject - 2));
          *p_m_pObject = 0;
        }
      }
      v3 = CParticleProperty::Create(&this->m_Particles, "tractor_beam_arm", PATTACH_POINT_FOLLOW, pAttachmentNames[i]);
      v4 = *p_m_pObject;
      if ( *p_m_pObject != v3 )
      {
        if ( v4 )
        {
          v5 = *(p_m_pObject - 1);
          if ( v5 )
          {
            *v5 = *(p_m_pObject - 2);
            v6 = (int)*(p_m_pObject - 2);
            if ( v6 )
              *(_DWORD *)(v6 + 4) = *(p_m_pObject - 1);
          }
          else if ( (CNewParticleEffect **)v4->m_References.m_pHead == p_m_pObject - 2 )
          {
            v7 = (CUtlReference<CNewParticleEffect> *)*(p_m_pObject - 2);
            v4->m_References.m_pHead = v7;
            if ( v7 )
              v7->m_pPrev = 0;
          }
          *(p_m_pObject - 1) = 0;
          *(p_m_pObject - 2) = 0;
          *p_m_pObject = 0;
        }
        *p_m_pObject = v3;
        if ( v3 )
        {
          v8 = (CUtlReference<CNewParticleEffect> *)(p_m_pObject - 2);
          *(p_m_pObject - 2) = (CNewParticleEffect *)v3->m_References.m_pHead;
          m_pHead = v3->m_References.m_pHead;
          if ( m_pHead )
            m_pHead->m_pPrev = v8;
          *(p_m_pObject - 1) = 0;
          v3->m_References.m_pHead = v8;
        }
      }
      if ( *p_m_pObject )
      {
        CParticleProperty::AddControlPoint(
          &this->m_Particles,
          *p_m_pObject,
          1,
          this,
          PATTACH_ABSORIGIN,
          0,
          vec3_origin,
          0);
        CParticleProperty::AddControlPoint(
          &this->m_Particles,
          *p_m_pObject,
          2,
          this,
          PATTACH_ABSORIGIN,
          0,
          vec3_origin,
          0);
        v10 = &g_vTractorBeamColorReverse;
        if ( this->m_flLinearForce >= 0.0 )
          v10 = &g_vTractorBeamColorForward;
        v11 = *(_QWORD *)&v10->x;
        z = v10->z;
        v13 = *p_m_pObject;
        *(_QWORD *)&color.x = v11;
        color.z = z;
        CNewParticleEffect::SetControlPoint(v13, 1, &color);
        C_BaseEntity::CalcAbsolutePosition(this);
        m_flLinearForce = this->m_flLinearForce;
        v15 = this->m_rgflCoordinateFrame.m_flMatVal[1][0];
        v16 = this->m_rgflCoordinateFrame.m_flMatVal[2][0];
        v17 = *p_m_pObject;
        vVelocity.x = this->m_rgflCoordinateFrame.m_flMatVal[0][0] * m_flLinearForce;
        vVelocity.y = v15 * m_flLinearForce;
        vVelocity.z = v16 * m_flLinearForce;
        CNewParticleEffect::SetControlPoint(v17, 2, &vVelocity);
      }
      p_m_pObject += 3;
      ++i;
    }
    while ( i < 3 );
  }
  this->m_bEffectsActive = 1;
}