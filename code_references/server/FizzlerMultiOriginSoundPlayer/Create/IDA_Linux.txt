FizzlerMultiOriginSoundPlayer *__cdecl FizzlerMultiOriginSoundPlayer::Create(
        IRecipientFilter *const filter,
        const char *soundName)
{
  CBaseEntity *EntityByName; // eax
  FizzlerMultiOriginSoundPlayer *v3; // ebx
  CSoundEnvelopeController *Controller; // eax
  edict_t *m_pPev; // edx
  CSoundEnvelopeController *v6; // esi
  int (__cdecl *v7)(CSoundEnvelopeController *, IRecipientFilter *const, signed int, const char *); // ecx
  signed int v8; // eax
  int v9; // eax

  EntityByName = CreateEntityByName("fizzler_multiorigin_sound_player", -1, 1);
  v3 = (FizzlerMultiOriginSoundPlayer *)EntityByName;
  if ( EntityByName )
  {
    (*((void (__cdecl **)(CBaseEntity *))EntityByName->_vptr_IHandleEntity + 25))(EntityByName);
    Controller = CSoundEnvelopeController::GetController();
    m_pPev = v3->m_Network.m_pPev;
    v6 = Controller;
    v7 = (int (__cdecl *)(CSoundEnvelopeController *, IRecipientFilter *const, signed int, const char *))*((_DWORD *)Controller->_vptr_CSoundEnvelopeController + 6);
    v8 = 0;
    if ( m_pPev )
      v8 = m_pPev - gpGlobals->pEdicts;
    v9 = v7(v6, filter, v8, soundName);
    v3->m_pSound = (CSoundPatch *)v9;
    (*((void (__cdecl **)(CSoundEnvelopeController *, int, int, int, _DWORD))v6->_vptr_CSoundEnvelopeController + 2))(
      v6,
      v9,
      1065353216,
      1120403456,
      0);
  }
  return v3;
}