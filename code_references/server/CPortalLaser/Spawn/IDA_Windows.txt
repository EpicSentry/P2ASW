void __thiscall CPortalLaser::Spawn(CPortalLaser *this)
{
  bool v2; // zf
  const char *pszValue; // eax
  int v4; // eax
  const char *v5; // eax
  const char *v6; // ecx

  CPortalPlayerInventory::ValidateInventoryPositions((vgui::ListViewPanel *)this);
  this->Precache(this);
  v2 = !this->m_bFromReflectedCube;
  this->m_bGlowInitialized = 0;
  if ( v2 )
  {
    pszValue = this->m_ModelName.pszValue;
    if ( pszValue && *pszValue )
      this->SetModel(this, this->m_ModelName.pszValue);
    else
      this->SetModel(this, "models/props/laser_emitter.mdl");
    CCollisionProperty::SetSolid(&this->m_Collision, SOLID_VPHYSICS);
    v4 = CBaseAnimating::LookupAttachment(this, "laser_attachment");
    this->m_iLaserAttachment = v4;
    if ( !v4 )
    {
      v5 = this->m_ModelName.pszValue;
      if ( !v5 )
        v5 = locale;
      v6 = this->m_iName.m_Value.pszValue;
      if ( !v6 )
        v6 = locale;
      _Warning("env_portal_laser '%s' : model named '%s' does not have attachment 'laser_attachment'\n", v6, v5);
    }
    this->CreateVPhysics(this);
  }
  this->m_pAmbientSound[0] = 0;
  this->m_pAmbientSound[1] = 0;
  this->m_pAmbientSound[2] = 0;
  this->m_pAmbientSound[3] = 0;
  this->m_pAmbientSound[4] = 0;
  this->m_pAmbientSound[5] = 0;
  this->m_pAmbientSound[6] = 0;
  this->m_pAmbientSound[7] = 0;
  this->m_pAmbientSound[8] = 0;
  this->m_pAmbientSound[9] = 0;
  this->m_pAmbientSound[10] = 0;
  this->m_pAmbientSound[11] = 0;
  this->m_pAmbientSound[12] = 0;
  this->m_pAmbientSound[13] = 0;
  this->m_pAmbientSound[14] = 0;
  this->m_pAmbientSound[15] = 0;
  this->m_pAmbientSound[16] = 0;
  this->m_pAmbientSound[17] = 0;
  this->m_pAmbientSound[18] = 0;
  this->m_pAmbientSound[19] = 0;
  this->m_pAmbientSound[20] = 0;
  this->m_pAmbientSound[21] = 0;
  this->m_pAmbientSound[22] = 0;
  this->m_pAmbientSound[23] = 0;
  this->m_pAmbientSound[24] = 0;
  this->m_pAmbientSound[25] = 0;
  this->m_pAmbientSound[26] = 0;
  this->m_pAmbientSound[27] = 0;
  this->m_pAmbientSound[28] = 0;
  this->m_pAmbientSound[29] = 0;
  this->m_pAmbientSound[30] = 0;
  this->m_pAmbientSound[31] = 0;
  this->m_pAmbientSound[32] = 0;
  CPortalLaser::CreateHelperEntities(this);
  if ( !this->m_bStartOff )
    CPortalLaser::TurnOn(this);
  CBaseAnimating::SetFadeDistance(this, -1.0, 0.0);
  CBaseEntity::SetGlobalFadeScale(this, 0.0);
}